import java.io.*;
import java.util.*;
public class WateringWell1 {
	public static PrintWriter out;
	static int mod=(int) (1e9+7);
	public static void main(String[] args)throws IOException {
		JS sc=new JS();
		//out=new PrintWriter(System.out);
	    out = new PrintWriter(new BufferedWriter(new FileWriter("WateringWell1.txt")));
	    int t=sc.nextInt();
	    for(int tt=1;tt<=t;tt++) {
	    	int n=sc.nextInt();
	    	Pair p[]=new Pair[n];
	    	for(int i=0;i<n;i++) {
	    		int x=sc.nextInt();
	    		int y=sc.nextInt();
	    		p[i]=new Pair(x, y);
	    	}
	    	int q=sc.nextInt();
	    	Pair w[]=new Pair[q];
	    	for(int i=0;i<q;i++) {
	    		int x=sc.nextInt();
	    		int y=sc.nextInt();
	    		w[i]=new Pair(x, y);
	    	}
	    	long ans=0;
	    	for(int i=0;i<n;i++) {
	    		for(int j=0;j<q;j++) {
	    			int xdiff=p[i].x-w[j].x;
	    			int ydiff=p[i].y-w[j].y;
	    			ans=((long)(ans+xdiff*xdiff+ydiff*ydiff))%mod;
	    		}
	    	}
	    	out.println("Case #"+tt+": "+ans);
	    }
	    out.close();
	}
	static class Pair{
		int x, y;
		public Pair(int x, int y) {
			this.x=x;this.y=y;
		}
	}
	static class JS {
	    public int BS = 1<<16;
	    public char NC = (char)0;
	    byte[] buf = new byte[BS];
	    int bId = 0, size = 0;
	    char c = NC;
	    double num = 1;
	    BufferedInputStream in;

	    public JS() {
	        in = new BufferedInputStream(System.in, BS);
	    }

	    public JS(String s) throws FileNotFoundException {
	        in = new BufferedInputStream(new FileInputStream(new File(s)), BS);
	    }

	    public char nextChar(){
	        while(bId==size) {
	            try {
	                size = in.read(buf);
	            }catch(Exception e) {
	                return NC;
	            }
	            if(size==-1)return NC;
	            bId=0;
	        }
	        return (char)buf[bId++];
	    }

	    public int nextInt() {
	        return (int)nextLong();
	    }

	    public long nextLong() {
	        num=1;
	        boolean neg = false;
	        if(c==NC)c=nextChar();
	        for(;(c<'0' || c>'9'); c = nextChar()) {
	            if(c=='-')neg=true;
	        }
	        long res = 0;
	        for(; c>='0' && c <='9'; c=nextChar()) {
	            res = (res<<3)+(res<<1)+c-'0';
	            num*=10;
	        }
	        return neg?-res:res;
	    }

	    public double nextDouble() {
	        double cur = nextLong();
	        return c!='.' ? cur:cur+nextLong()/num;
	    }

	    public String next() {
	        StringBuilder res = new StringBuilder();
	        while(c<=32)c=nextChar();
	        while(c>32) {
	            res.append(c);
	            c=nextChar();
	        }
	        return res.toString();
	    }

	    public String nextLine() {
	        StringBuilder res = new StringBuilder();
	        while(c<=32)c=nextChar();
	        while(c!='\n') {
	            res.append(c);
	            c=nextChar();
	        }
	        return res.toString();
	    }

	    public boolean hasNext() {
	        if(c>32)return true;
	        while(true) {
	            c=nextChar();
	            if(c==NC)return false;
	            else if(c>32)return true;
	        }
	    }
	}
}
